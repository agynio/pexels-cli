name: CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      PEXELS_TOKEN: ${{ secrets.PEXELS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Sanity
        run: echo "Workflow started on ${{ github.event_name }} for ${{ github.ref }}"
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Lint (fmt)
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Test
        run: cargo test --workspace --all-features -- --nocapture
      - name: Build release
        run: cargo build --release --workspace
      - name: E2E (mock server via tests)
        run: cargo test -p pexels --test integration_mock -- --nocapture
      - name: Check PEXELS_TOKEN
        run: |
          if [ -z "${PEXELS_TOKEN}" ]; then
            echo "PEXELS_TOKEN is missing. Add it under repository Settings → Secrets and variables → Actions." >&2
            exit 1
          fi
      - name: Live smoke - auth status
        run: ./target/release/pexels auth status --timeout 20 --max-retries 3
      - name: Live smoke - photos search
        run: ./target/release/pexels photos search 'cats' --per-page 1 --timeout 20 --max-retries 3
      - name: Live smoke - photos curated
        run: ./target/release/pexels photos curated --per-page 1 --fields photographer,alt --timeout 20 --max-retries 3
      - name: Live smoke - videos popular
        run: ./target/release/pexels videos popular --per-page 1 --fields duration --timeout 20 --max-retries 3
      - name: Live smoke - collections featured
        run: ./target/release/pexels collections featured --per-page 1 --fields title --timeout 20 --max-retries 3
      - name: Live smoke - photos url/download if present
        run: |
          set -euo pipefail
          out=$(./target/release/pexels photos curated --per-page 1 --fields @urls,@files --timeout 20 --max-retries 3)
          # Try to extract a downloadable URL using yq only
          url=$(echo "$out" | yq -r '.photos[0].src.original // .photos[0].url // empty' || true)
          if [ -n "${url:-}" ]; then
            echo "Attempting HEAD request: $url"
            curl -fsSLI --retry 3 --retry-delay 1 "$url" >/dev/null || curl -fsSL --retry 3 --retry-delay 1 -o /dev/null "$url"
          else
            echo "No URL found to download, skipping."
          fi
