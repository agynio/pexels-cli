name: CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      PEXELS_TOKEN: ${{ secrets.PEXELS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Sanity
        run: echo "Workflow started on ${{ github.event_name }} for ${{ github.ref }}"
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Lint (fmt)
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Test (unit)
        run: cargo test --workspace --all-features -- --nocapture
      - name: Build release
        run: cargo build --release --workspace
      - name: Install yq
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y curl
          YQ_VER=v4.44.3
          sudo curl -L -o /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VER}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          yq --version
      - name: Live tests - auth status
        if: ${{ env.PEXELS_TOKEN != '' && (github.event_name == 'push' || github.event_name == 'pull_request') && github.repository_owner == 'agynio' }}
        shell: bash
        run: |
          set -euo pipefail
          OUT=$(./target/release/pexels auth status)
          echo "--- auth status output ---"
          echo "$OUT"
          echo "---------------------------"
          echo "$OUT" | yq -e 'type == "!!map" and has("data") and has("meta")' >/dev/null
          echo "$OUT" | yq -e '(.meta.next_page == null) or ((.meta.next_page | type) == "!!int")' >/dev/null
      - name: Live tests - photos search
        if: ${{ env.PEXELS_TOKEN != '' && (github.event_name == 'push' || github.event_name == 'pull_request') && github.repository_owner == 'agynio' }}
        shell: bash
        run: |
          set -euo pipefail
          OUT=$(./target/release/pexels photos search -q cats || true)
          echo "--- photos search output ---"
          echo "$OUT"
          echo "----------------------------"
          ./target/release/pexels photos search -q cats >/dev/null
          echo "$OUT" | yq -e 'type == "!!map" and has("data") and has("meta")' >/dev/null
          echo "$OUT" | yq -e '(.meta.next_page == null) or ((.meta.next_page | type) == "!!int")' >/dev/null
          echo "$OUT" | yq -e '(.data | type) == "!!seq" and ((.data | length) > 0)' >/dev/null
      - name: Live tests - photos curated
        if: ${{ env.PEXELS_TOKEN != '' && (github.event_name == 'push' || github.event_name == 'pull_request') && github.repository_owner == 'agynio' }}
        shell: bash
        run: |
          set -euo pipefail
          OUT=$(./target/release/pexels photos curated || true)
          echo "--- photos curated output ---"
          echo "$OUT"
          echo "-----------------------------"
          ./target/release/pexels photos curated >/dev/null
          echo "$OUT" | yq -e 'type == "!!map" and has("data") and has("meta")' >/dev/null
          echo "$OUT" | yq -e '(.meta.next_page == null) or ((.meta.next_page | type) == "!!int")' >/dev/null
          echo "$OUT" | yq -e '(.data | type) == "!!seq" and ((.data | length) > 0)' >/dev/null
      - name: Live tests - videos popular
        if: ${{ env.PEXELS_TOKEN != '' && (github.event_name == 'push' || github.event_name == 'pull_request') && github.repository_owner == 'agynio' }}
        shell: bash
        run: |
          set -euo pipefail
          OUT=$(./target/release/pexels videos popular || true)
          echo "--- videos popular output ---"
          echo "$OUT"
          echo "-----------------------------"
          ./target/release/pexels videos popular >/dev/null
          echo "$OUT" | yq -e 'type == "!!map" and has("data") and has("meta")' >/dev/null
          echo "$OUT" | yq -e '(.meta.next_page == null) or ((.meta.next_page | type) == "!!int")' >/dev/null
          echo "$OUT" | yq -e '(.data | type) == "!!seq" and ((.data | length) > 0)' >/dev/null
      - name: Live tests - collections featured
        if: ${{ env.PEXELS_TOKEN != '' && (github.event_name == 'push' || github.event_name == 'pull_request') && github.repository_owner == 'agynio' }}
        shell: bash
        run: |
          set -euo pipefail
          OUT=$(./target/release/pexels collections featured || true)
          echo "--- collections featured output ---"
          echo "$OUT"
          echo "----------------------------------"
          ./target/release/pexels collections featured >/dev/null
          echo "$OUT" | yq -e 'type == "!!map" and has("data") and has("meta")' >/dev/null
          echo "$OUT" | yq -e '(.meta.next_page == null) or ((.meta.next_page | type) == "!!int")' >/dev/null
          echo "$OUT" | yq -e '(.data | type) == "!!seq" and ((.data | length) > 0)' >/dev/null
