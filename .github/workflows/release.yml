name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release -p pexels
      - name: Package
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/release/pexels.exe dist/pexels-${{ runner.os }}.exe
          else
            cp target/release/pexels dist/pexels-${{ runner.os }}
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: pexels-${{ runner.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create tag
        id: tag
        shell: bash
        run: |
          shortsha=$(git rev-parse --short HEAD)
          date=$(date +%Y%m%d%H%M%S)
          echo "tag=release-${shortsha}-${date}" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Pexels CLI ${{ steps.tag.outputs.tag }}
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
